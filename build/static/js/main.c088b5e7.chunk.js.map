{"version":3,"sources":["Home.js","GoogleMap.js","Imagen.js","Audio.js","Video.js","Youtube.js","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","className","React","Component","id","fuente","title","map","item","key","src","style","Border","img","class","alt","target","link","href","audio","formato","controls","type","video","width","url","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","to","react_router","path","exact","component","GoogleMap","Imagen","Audio","Video","Youtube","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c088b5e7.chunk.js","sourcesContent":["import React from 'react'\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className='home'>\r\n      \t<p>Home</p>        \r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default App","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n\r\n    const imagen = [\r\n      {\r\n        id: 1,\r\n        fuente: 'https://www.google.com/maps/embed/v1/place?key=AIzaSyDqKNTA72e78Rcd2ucHZ_YamoEeF6e-fJE&q=Space+Needle,Seattle+WA\"',        \r\n        title: 'Google Maps'\r\n      }\r\n    ];\r\n\r\n    return (\r\n\r\n      imagen.map(item => { \r\n\r\n        return <div key={ item.id } className='embed-responsive embed-responsive-4by3'>\r\n            <iframe className='embed-responsive-item' src={ item.fuente } title={ item.title } style={{Border: + \"0\" }}></iframe>\r\n          </div>\r\n       \r\n\r\n      })\r\n\r\n    )\r\n    \r\n\r\n  }\r\n\r\n};\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n\n    const item = [\n      {\n        id: 1,\n        img: 'http://blog.nubecolectiva.com/wp-content/uploads/2019/03/img_destacada_blogdevs-2-930x360.png',\n        class: 'img-fluid',\n        alt: 'Efecto Sticky o Video Flotante mientras te desplazas verticalmente en una Página Web',\n        title: 'Efecto Sticky o Video Flotante mientras te desplazas verticalmente en una Página Web',\n        target: '_blank',\n        link: 'http://blog.nubecolectiva.com/efecto-sticky-o-video-flotante-mientras-te-desplazas-verticalmente-en-una-pagina-web/'\n      }\n    ];\n\n    return (\n\n      item.map(item => { \n\n        return <a key={ item.id } href={ item.link } target={ item.target }>\n                <img className={ item.class } src={ item.img } alt={ item.alt } title={ item.title } />\n               </a>\n\n      })\n\n    )\n    \n\n  }\n\n};\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n\r\n    const item = [\r\n      {\r\n        id: 1,\r\n        audio: 'http://nubecolectiva.com/blog/tutos/demos/renderizando_elementos_multimedia_react/mp3/cancion.mp3',\r\n        formato: 'audio/mpeg',\r\n      }\r\n    ];\r\n\r\n    return (\r\n\r\n      item.map(item => { \r\n\r\n        return  <div key={ item.id }>\r\n                  <audio controls>\r\n                    <source src={ item.audio } type={ item.formato }/>\r\n                  </audio>\r\n                </div>\r\n       \r\n\r\n      })\r\n\r\n    )\r\n    \r\n\r\n  }\r\n\r\n};\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n\r\n    const item = [\r\n      {\r\n        id: 1,\r\n        video: 'http://nubecolectiva.com/blog/tutos/demos/video_fijo_flotante/video/video.mp4',\r\n        formato: 'video/mp4',\r\n      }\r\n    ];\r\n\r\n    return (\r\n\r\n      item.map(item => { \r\n\r\n        return  <div key={ item.id }>\r\n                  <video width='100%' controls>\r\n                    <source src={ item.video} type={ item.formato }/>\r\n                  </video>\r\n                </div>\r\n       \r\n\r\n      })\r\n\r\n    )\r\n    \r\n\r\n  }\r\n\r\n};\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n\r\n    const imagen = [\r\n      {\r\n        id: 1,\r\n        url: 'https://www.youtube.com/embed/t_ZEavuVcZ0',\r\n        title: 'Cambiemos el aspecto visual(UI) de nuestro Sublime Text 3'\r\n      }\r\n    ];\r\n\r\n    return (\r\n\r\n      imagen.map(item => { \r\n\r\n        return <div key={ item.id } className='embed-responsive embed-responsive-4by3'>\r\n            <iframe className='embed-responsive-item' src={ item.url } title={ item.title } ></iframe>\r\n          </div>\r\n       \r\n\r\n      })\r\n\r\n    )\r\n    \r\n\r\n  }\r\n\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './Home';\nimport GoogleMap from './GoogleMap'\nimport Imagen from './Imagen'\nimport Audio from './Audio'\nimport Video from './Video'\nimport Youtube from './Youtube'\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nfunction AppRouter() {\n  return (\n    <Router>\n\n      \t<div className='index'>\n\n\t      \t<p>Selecciona un Elemento para verlo: </p>\n\n\t        <nav className='mb-5'>\n\t          <ul className='nav justify-content-center'>\n\t            <li className='list-group-item'>\n\t              <Link to='/'>Home</Link>\n\t            </li>\n\t            <li className='list-group-item'>\n\t              <Link to='/google-map/'>Google Map</Link>\n\t            </li>\n\t            <li className='list-group-item'>\n\t              <Link to='/imagen/'>Imagen</Link>\n\t            </li>\n\t            <li className='list-group-item'>\n\t              <Link to='/audio/'>Audio</Link>\n\t            </li>\n\t            <li className='list-group-item'>\n\t              <Link to='/video/'>Video</Link>\n\t            </li>\n\t            <li className='list-group-item'>\n\t              <Link to='/youtube/'>Youtube</Link>\n\t            </li>\n\t          </ul>\n\t        </nav>\n\n\t        <Route path='/' exact component={App} />\n\t        <Route path='/google-map/' component={GoogleMap} />\n\t        <Route path='/imagen/' component={Imagen} />\n\t        <Route path='/audio/' component={Audio} />\n\t        <Route path='/video/' component={Video} />\n\t        <Route path='/youtube/' component={Youtube} />\n      </div>\n\n    </Router>\n  );\n}\n\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}